name: "docker-haskell"
description: ""

inputs:
  image-name:
    description: "image-name"
    required: true
  dockerfile:
    description: "dockerfile"
    required: true
  platform:
    description: "buildx platform"
    default: ""
    required: false
  tag:
    description: "format: docker_tag:[docker_tag_alias...]"
    required: true
  kargs-key:
    description: "format: arg_key1:arg_key2:..."
    default: ""
    required: false
  kargs-value:
    description: "format: arg_val1:arg_val2:..."
    default: ""
    required: false

runs:
  using: "composite"
  steps:
    - name: Expose GitHub Runtime
      uses: crazy-max/ghaction-github-runtime@v2

    - name: Docker build
      run: |
        set -x

        IMAGE_NAME=${{ inputs.image-name }}

        build_args=""
        IFS=':' read -ra kargs_keys < <(echo "${{ inputs.kargs-key }}")
        IFS=':' read -ra kargs_vals < <(echo "${{ inputs.kargs-value }}")
        for (( i = 0; i < ${#kargs_keys[*]}; ++i )); do
          build_args="$build_args --build-arg ${kargs_keys[i]}=${kargs_vals[i]}"
        done

        build_tags=""
        IFS=':' read -ra tags < <(echo "${{ inputs.tag }}")
        for (( i = 0; i < ${#tags[*]}; ++i )); do
          build_tags="$build_tags --tag $IMAGE_NAME:${tags[i]}"
        done

        push_arg=""
        [ "${{ github.event_name }}" == "push" ] && push_arg="--push"
        platform_arg=""
        [ -n "${{ inputs.platform }}" ] && platform_arg="--platform ${{ inputs.platform }}"

        docker buildx build . \
          --cache-to type=gha --cache-from type=gha -f ${{ inputs.dockerfile }} \
          $platform_arg $push_arg $build_args $build_tags
      shell: bash
