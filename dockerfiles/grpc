# docker build . -f dockerfiles/grpc -t ghcr.io/hstreamdb/grpc:1.35.0
#
# ref: https://github.com/grpc/grpc/blob/master/BUILDING.md

FROM ubuntu:focal as builder

RUN apt-get update && DEBIAN_FRONTEND="noninteractive" apt-get install -y \
      build-essential autoconf libtool libssl-dev pkg-config cmake \
      golang-1.16-go git

ARG PARALLEL
RUN mkdir -p /deps/grpc && \
    git clone --recurse-submodules -b v1.35.0 --depth 1 --shallow-submodules \
        https://github.com/grpc/grpc /deps/grpc && \
    BUILD_DIR=$(mktemp -d) RELEASE_DIR=/release && \
    mkdir -p $RELEASE_DIR && cd $BUILD_DIR && \
    cmake -DCMAKE_INSTALL_PREFIX=$RELEASE_DIR \
          -DBUILD_SHARED_LIBS=ON \
          -DgRPC_INSTALL=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DgRPC_SSL_PROVIDER=package \
          /deps/grpc && \
    make -j ${PARALLEL:-$(nproc)} && \
    make install -j${PARALLEL:-$(nproc)}

# build & install grpc-gateway
ARG GOPROXY_ENV
RUN export RELEASE_DIR=/release && \
    export GO111MODULE=on && \
    export GOBIN=$RELEASE_DIR/bin && \
    export GOPROXY=${GOPROXY_ENV} && \
    export GOPATH=/root/go && \
    /usr/lib/go-1.16/bin/go get -u \
      github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@v2.6.0 \
      github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2@v2.6.0 \
      google.golang.org/protobuf/cmd/protoc-gen-go@v1.27.1 \
      google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1.0 && \
    mkdir -p $RELEASE_DIR/include/protoc-gen-openapiv2/options && \
    cp -R /root/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway/v2\@v2.6.0/protoc-gen-openapiv2/options/* \
          $RELEASE_DIR/include/protoc-gen-openapiv2/options/ && \
    mkdir -p $RELEASE_DIR/include/google/api && \
    cp -R /deps/grpc/third_party/googleapis/google/api/* $RELEASE_DIR/include/google/api/

RUN rm -rf /var/lib/apt/lists/* /deps

# ------------------------------------------------------------------------------

FROM ubuntu:focal

COPY --from=builder /release/ /usr/local/

ENV PATH="$PATH:/usr/local/bin"
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib

CMD /bin/bash

# vim: set ft=dockerfile:
